{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","App.tsx","index.tsx"],"names":["currentTodoReducer","state","action","type","actions","value","payload","all","active","completed","initialState","query","status","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","dispatch","useEffect","fetchData","a","data","todosActions","visibleTodos","array","result","todo","title","includes","filterTodos","className","map","id","classNames","TodoFilter","queryState","onSubmit","event","preventDefault","onClick","filterActions","placeholder","onChange","target","style","pointerEvents","Loader","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d85915.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","type QUERY = { type: 'filter/SET_QUERY', payload: string };\ntype ALL = { type: 'filter/ALL' };\ntype ACTIVE = { type: 'filter/ACTIVE' };\ntype COMPLETED = { type: 'filter/COMPLETED' };\n\ntype ACTION = ALL | ACTIVE | COMPLETED | QUERY;\n\nconst query = (value: string) => ({ type: 'filter/SET_QUERY', payload: value });\nconst all = () => ({ type: 'filter/ALL' });\nconst active = () => ({ type: 'filter/ACTIVE' });\nconst completed = () => ({ type: 'filter/COMPLETED' });\n\nconst status = {\n  all,\n  active,\n  completed,\n};\n\nexport const actions = {\n  query, status,\n};\n\nexport type State = {\n  query: string,\n  status: 'filter/ALL' | 'filter/ACTIVE' | 'filter/COMPLETED',\n};\n\nconst initialState: State = {\n  query: '',\n  status: 'filter/ALL',\n};\n\nconst filterReducer = (state: State = initialState, action: ACTION) => {\n  switch (action.type) {\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/ACTIVE':\n      return { ...state, status: action.type };\n\n    case 'filter/COMPLETED':\n      return { ...state, status: action.type };\n\n    case 'filter/ALL':\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET_TODOS',\n  payload: Todo[]\n};\n\ntype Action = SetTodosAction;\n\nexport const setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET_TODOS',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\nconst todosReducer = (todos = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET_TODOS':\n      return [...action.payload];\n    default:\n      return [...todos];\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { actions as todosActions } from '../../features/todos';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos: Todo[] = useAppSelector(state => state.todos);\n  const filter = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data: Todo[] = await getTodos();\n\n      dispatch(todosActions.setTodos(data));\n    };\n\n    fetchData();\n  }, []);\n\n  function filterTodos(array: Todo[]) {\n    let result = [...array];\n\n    result = result.filter(todo => {\n      switch (filter.status) {\n        case 'filter/ACTIVE':\n          if (todo.completed === false) {\n            return true;\n          }\n\n          return false;\n\n        case 'filter/COMPLETED':\n          if (todo.completed === true) {\n            return true;\n          }\n\n          return false;\n\n        case 'filter/ALL':\n          return true;\n\n        default:\n          return false;\n      }\n    });\n\n    if (filter.query !== '') {\n      result = result.filter(todo => todo.title.includes(filter.query));\n    }\n\n    return result;\n  }\n\n  const visibleTodos: Todo[] = filterTodos(todos);\n\n  return (\n    <>\n      <p className=\"notification is-warning\">\n        There are no todos matching current filter criteria\n      </p>\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visibleTodos.map(todo => (\n            <tr data-cy=\"todo\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={\n                  classNames(\n                    { 'has-text-danger': todo.completed === false },\n                    { 'has-text-success': todo.completed === true },\n                  )\n                }\n                >\n                  {todo.title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions as filterActions } from '../../features/filter';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const queryState = useAppSelector(state => state.filter.query);\n\n  const query = (value: string) => {\n    dispatch(filterActions.query(value));\n  };\n\n  const all = () => {\n    dispatch(filterActions.status.all());\n  };\n\n  const active = () => {\n    dispatch(filterActions.status.active());\n  };\n\n  const completed = () => {\n    dispatch(filterActions.status.completed());\n  };\n\n  function handleQuery(event: React.ChangeEvent<HTMLInputElement>) {\n    query(event.target.value);\n  }\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\">\n            <option onClick={all} value=\"all\">All</option>\n            <option onClick={active} value=\"active\">Active</option>\n            <option onClick={completed} value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={queryState}\n          onChange={handleQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable max-len */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n// import { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              <Loader />\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}